//I ONLY DID THE GRAPHICS OF LANSCAPE LETTERS/MESSAGES & NUMBERS

#ifndef GAME_HH
#define GAME_HH

#include <list>
#include <set>
#include <string>
#include <fstream>
#include "mario.hh"
#include "platform.hh"
#include "document.hh"
#include "window.hh"
#include "finder.hh"
#include "hummer.hh"
#include "bomb.hh"


class Game {

    std::ofstream file;

    std::random_device rd;

    const int MAX_UP = 60;
    const int MAX_DOWN = 225;

    Mario                 mario_;
    int docus_took_;
    
    const int _ = -1;
    const int b = pro2::white;
    const int x = 0xb5b5b5;
    const int y = 0xcccccc;
    const int z = 0x424242;
    const int g = pro2::yellow;

    const std::vector<std::vector<int>> sol_ = {
        {g,g,g,g,g,g,g,g,g},
        {g,g,g,g,g,g,g,g,g},
        {g,g,g,g,g,g,g,g,g},
        {g,g,g,g,g,g,g,g,g},
        {_,g,g,g,g,g,g,g,g},
        {_,g,g,g,g,g,g,g,g},
        {_,_,g,g,g,g,g,g,g},
        {_,_,_,g,g,g,g,g,g},
        {_,_,_,_,_,g,g,g,g}
    };

    const std::vector<std::vector<int>> paissatge_ = {
        {_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,y,y,y,y,x,y,y,y,y,_,_,_,_,_,_,_,_,_,_},
        {_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,y,x,y,y,y,x,y,x,y,y,x,x,y,y,x,y,_,_,_,_,_,_,_},
        {_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,y,y,y,y,y,y,x,x,y,y,y,y,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {_,_,_,_,x,x,x,x,x,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {_,_,_,_,_,_,_,x,x,x,_,x,x,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {_,_,_,_,_,b,_,_,b,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {_,_,_,_,b,b,b,b,b,b,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {_,_,_,b,b,b,b,b,b,b,b,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {_,_,b,b,b,b,b,b,b,b,b,b,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {_,z,z,b,z,z,b,b,b,b,b,b,b,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {z,z,z,z,z,z,z,b,z,b,b,b,b,b,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {z,z,z,z,z,z,z,z,z,b,z,b,z,b,z,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,y,y,y,y,y,_,_,_,_,_,_,_,_,_,_,_},
        {z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,y,y,y,y,_,_,_,_,_,_,_,_,_},
        {z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
        {z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,z,_,_,_,_,_,_,_,_,_,_,_,_,_,_}
    };

    const std::vector<std::vector<int>> game_over = 
    {
        {_,b,b,b,b,b,b,_,_,_,_,_,_,_,b,_,_,_,_,_,_,_,b,b,_,_,_,_,_,_,b,b,_,_,b,b,b,b,b,b,_,_,_,_,_,_,_,_,b,b,b,b,b,_,_,_,b,b,_,_,_,_,_,_,_,_,b,b,_,_,b,b,b,b,b,b,_,_,_,b,b,b,b,_,_},
        {b,b,b,b,b,b,b,b,_,_,_,_,_,b,b,b,_,_,_,_,_,_,b,b,b,_,_,_,_,b,b,b,_,_,b,b,b,b,b,b,_,_,_,_,_,_,_,b,b,b,b,b,b,b,_,_,b,b,_,_,_,_,_,_,_,_,b,b,_,_,b,b,b,b,b,b,_,_,b,b,b,b,b,b,_},
        {b,b,_,_,_,_,b,b,_,_,_,_,_,b,b,b,_,_,_,_,_,_,b,b,b,b,_,_,b,b,b,b,_,_,b,b,_,_,_,_,_,_,_,_,_,_,b,b,b,_,_,_,b,b,b,_,_,b,b,_,_,_,_,_,_,b,b,_,_,_,b,b,_,_,_,_,_,_,b,b,_,_,b,b,_},
        {b,b,_,_,_,_,_,_,_,_,_,_,b,b,_,b,b,_,_,_,_,_,b,b,b,b,b,b,b,_,b,b,_,_,b,b,_,_,_,_,_,_,_,_,_,_,b,b,_,_,_,_,_,b,b,_,_,b,b,_,_,_,_,_,_,b,b,_,_,_,b,b,_,_,_,_,_,_,b,b,_,_,b,b,_},
        {b,b,_,_,_,_,_,_,_,_,_,_,b,b,_,b,b,_,_,_,_,_,b,b,_,b,b,b,b,_,b,b,_,_,b,b,b,b,b,b,_,_,_,_,_,_,b,b,_,_,_,_,_,b,b,_,_,_,b,b,_,_,_,_,b,b,_,_,_,_,b,b,b,b,b,b,_,_,b,b,b,b,b,b,_},
        {b,b,_,_,b,b,b,b,_,_,_,b,b,_,_,_,b,b,_,_,_,_,b,b,_,_,b,b,_,_,b,b,_,_,b,b,b,b,b,b,_,_,_,_,_,_,b,b,_,_,_,_,_,b,b,_,_,_,b,b,_,_,_,_,b,b,_,_,_,_,b,b,b,b,b,b,_,_,b,b,b,b,b,_,_},
        {b,b,_,_,b,b,b,b,_,_,_,b,b,b,b,b,b,b,_,_,_,_,b,b,_,_,_,_,_,_,b,b,_,_,b,b,_,_,_,_,_,_,_,_,_,_,b,b,_,_,_,_,_,b,b,_,_,_,_,b,b,_,_,b,b,_,_,_,_,_,b,b,_,_,_,_,_,_,b,b,b,b,_,_,_},
        {b,b,_,_,_,_,b,b,_,_,b,b,b,b,b,b,b,b,b,_,_,_,b,b,_,_,_,_,_,_,b,b,_,_,b,b,_,_,_,_,_,_,_,_,_,_,b,b,b,_,_,_,b,b,b,_,_,_,_,b,b,b,b,b,b,_,_,_,_,_,b,b,_,_,_,_,_,_,b,b,b,b,b,_,_},
        {b,b,b,b,b,b,b,b,_,_,b,b,_,_,_,_,_,b,b,_,_,_,b,b,_,_,_,_,_,_,b,b,_,_,b,b,b,b,b,b,_,_,_,_,_,_,_,b,b,b,b,b,b,b,_,_,_,_,_,_,b,b,b,b,_,_,_,_,_,_,b,b,b,b,b,b,_,_,b,b,_,b,b,b,_},
        {_,b,b,b,b,b,b,_,_,b,b,_,_,_,_,_,_,_,b,b,_,_,b,b,_,_,_,_,_,_,b,b,_,_,b,b,b,b,b,b,_,_,_,_,_,_,_,_,b,b,b,b,b,_,_,_,_,_,_,_,_,b,b,_,_,_,_,_,_,_,b,b,b,b,b,b,_,_,b,b,_,_,b,b,_}
    };

    const std::vector<std::vector<int>> play_again = {
        {b,b,b,b,b,_,_,_,_,b,_,_,_,_,_,b,b,b,_,_,_,_,_,_,_,_,b,b,b,_,_,b,b,b,b,_,_,_,_,b,_,_,_,_,_,_,b,b,b,_,_,b,b,b,b,_,_,_,_,_,_,b,b,b,b,b,_,_,_,b,b,b,_,_,_,_,_,_,_,_,b,b,b,_,_,b,_,_,_,_,_,_,_,_,b,_,_,_,_,b,_,_,_,b,_,_,_,_,_,_,_,_,_,b,_,_,_,_,_,_,b,b,b,_,_,_,_,_,_,b,_,_,_,_,_,b,b,b,_,b,_,_,_,b},
        {_,_,b,_,_,_,_,_,b,_,b,_,_,_,_,b,_,_,b,_,_,_,_,_,_,b,_,_,_,b,_,b,_,_,_,b,_,_,b,_,b,_,_,_,_,b,_,_,_,b,_,b,_,_,_,_,_,_,_,_,_,_,_,b,_,_,_,_,b,_,_,_,b,_,_,_,_,_,_,_,b,_,_,b,_,b,_,_,_,_,_,_,_,b,_,b,_,_,_,b,_,_,_,b,_,_,_,_,_,_,_,_,b,_,b,_,_,_,_,b,_,_,_,b,_,_,_,_,b,_,b,_,_,_,_,_,b,_,_,b,b,_,_,b},
        {_,_,b,_,_,_,_,_,b,_,b,_,_,_,_,b,_,_,b,_,_,_,_,_,_,b,_,_,_,_,_,b,_,_,_,b,_,_,b,_,b,_,_,_,_,b,_,_,_,_,_,b,_,_,_,_,_,_,_,_,_,_,_,b,_,_,_,b,_,_,_,_,_,b,_,_,_,_,_,_,b,_,_,b,_,b,_,_,_,_,_,_,_,b,_,b,_,_,_,_,b,_,b,_,_,_,_,_,_,_,_,_,b,_,b,_,_,_,_,b,_,_,_,_,_,_,_,_,b,_,b,_,_,_,_,_,b,_,_,b,b,_,_,b},
        {_,_,b,_,_,_,_,b,_,_,_,b,_,_,_,b,b,b,_,_,_,_,_,_,_,b,_,_,_,_,_,b,b,b,b,_,_,b,_,_,_,b,_,_,_,b,_,_,_,_,_,b,_,_,_,_,_,_,_,_,_,_,_,b,_,_,_,b,_,_,_,_,_,b,_,_,_,_,_,_,b,b,b,_,_,b,_,_,_,_,_,_,b,_,_,_,b,_,_,_,b,_,b,_,_,_,_,_,_,_,_,b,_,_,_,b,_,_,_,b,_,_,_,_,_,_,_,b,_,_,_,b,_,_,_,_,b,_,_,b,_,b,_,b},
        {_,_,b,_,_,_,_,b,_,_,_,b,_,_,_,b,_,_,_,_,_,_,_,_,_,_,b,b,b,_,_,b,_,_,_,_,_,b,_,_,_,b,_,_,_,b,_,_,_,_,_,b,b,b,b,_,_,_,_,_,_,_,_,b,_,_,_,b,_,_,_,_,_,b,_,_,_,_,_,_,b,_,_,_,_,b,_,_,_,_,_,_,b,_,_,_,b,_,_,_,_,b,_,_,_,_,_,_,_,_,_,b,_,_,_,b,_,_,_,b,_,b,b,b,_,_,_,b,_,_,_,b,_,_,_,_,b,_,_,b,_,b,_,b},
        {_,_,b,_,_,_,b,b,b,b,b,b,b,_,_,b,_,_,_,_,_,_,_,_,_,_,_,_,_,b,_,b,_,_,_,_,b,b,b,b,b,b,b,_,_,b,_,_,_,_,_,b,_,_,_,_,_,_,_,_,_,_,_,b,_,_,_,b,_,_,_,_,_,b,_,_,_,_,_,_,b,_,_,_,_,b,_,_,_,_,_,b,b,b,b,b,b,b,_,_,_,b,_,_,_,_,_,_,_,_,b,b,b,b,b,b,b,_,_,b,_,_,_,b,_,_,b,b,b,b,b,b,b,_,_,_,b,_,_,b,_,_,b,b},
        {_,_,b,_,_,_,b,_,_,_,_,_,b,_,_,b,_,_,_,_,_,_,_,_,_,b,_,_,_,b,_,b,_,_,_,_,b,_,_,_,_,_,b,_,_,b,_,_,_,b,_,b,_,_,_,_,_,_,_,_,_,_,_,b,_,_,_,_,b,_,_,_,b,_,_,_,_,_,_,_,b,_,_,_,_,b,_,_,_,_,_,b,_,_,_,_,_,b,_,_,_,b,_,_,_,_,_,_,_,_,b,_,_,_,_,_,b,_,_,b,_,_,_,b,_,_,b,_,_,_,_,_,b,_,_,_,b,_,_,b,_,_,b,b},
        {_,_,b,_,_,b,_,_,_,_,_,_,_,b,_,b,_,_,_,_,_,_,_,_,_,_,b,b,b,_,_,b,_,_,_,b,_,_,_,_,_,_,_,b,_,_,b,b,b,_,_,b,b,b,b,_,_,_,_,_,_,_,_,b,_,_,_,_,_,b,b,b,_,_,_,_,_,_,_,_,b,_,_,_,_,b,b,b,b,_,b,_,_,_,_,_,_,_,b,_,_,b,_,_,_,_,_,_,_,b,_,_,_,_,_,_,_,b,_,_,b,b,b,_,_,b,_,_,_,_,_,_,_,b,_,b,b,b,_,b,_,_,_,b},
    };

    const std::vector<std::vector<int>> n_0 = {
        {_,b,b,b,b,b,b,b,_},
        {b,b,b,b,b,b,b,b,b},
        {b,b,b,_,_,_,b,b,b},
        {b,b,_,_,_,_,_,b,b},
        {b,b,_,_,b,_,_,b,b},
        {b,b,_,_,b,_,_,b,b},
        {b,b,_,_,_,_,_,b,b},
        {b,b,b,_,_,_,b,b,b},
        {b,b,b,b,b,b,b,b,b},
        {_,b,b,b,b,b,b,b,_},

    };
    const std::vector<std::vector<int>> n_1 = {
        {_,_,_,_,_,b,b,_,_},
        {_,_,_,_,b,b,b,_,_},
        {_,_,_,b,b,b,b,_,_},
        {_,_,_,b,_,b,b,_,_},
        {_,_,_,_,_,b,b,_,_},
        {_,_,_,_,_,b,b,_,_},
        {_,_,_,_,_,b,b,_,_},
        {_,_,_,_,_,b,b,_,_},
        {_,_,_,_,_,b,b,_,_},
        {_,_,_,_,_,b,b,_,_},

    };

    const std::vector<std::vector<int>> n_2 = {
        {_,_,_,b,b,b,_,_,_},
        {_,_,b,b,b,b,b,_,_},
        {_,b,b,_,_,_,b,b,_},
        {_,b,b,_,_,_,b,b,_},
        {_,_,_,_,_,b,b,_,_},
        {_,_,_,_,b,b,_,_,_},
        {_,_,_,b,b,_,_,_,_},
        {_,_,b,b,_,_,_,_,_},
        {_,b,b,b,b,b,b,_,_},
        {_,b,b,b,b,b,b,_,_},

    };

    const std::vector<std::vector<int>> n_3 = {
        {_,_,b,b,b,b,b,_,_},
        {_,b,b,b,b,b,b,b,_},
        {_,b,b,_,_,_,b,b,_},
        {_,b,b,_,_,_,b,b,_},
        {_,_,_,_,_,b,b,_,_},
        {_,_,_,_,_,b,b,_,_},
        {_,b,b,_,_,_,b,b,_},
        {_,b,b,_,_,_,b,b,_},
        {_,b,b,b,b,b,b,b,_},
        {_,_,b,b,b,b,b,_,_},

    };

    const std::vector<std::vector<int>> n_4 = {
        {_,b,b,_,_,_,b,b,_},
        {_,b,b,_,_,_,b,b,_},
        {_,b,b,_,_,_,b,b,_},
        {_,b,b,_,_,_,b,b,_},
        {_,b,b,b,b,b,b,b,_},
        {_,_,b,b,b,b,b,b,_},
        {_,_,_,_,_,_,b,b,_},
        {_,_,_,_,_,_,b,b,_},
        {_,_,_,_,_,_,b,b,_},
        {_,_,_,_,_,_,b,b,_},

    };

    const std::vector<std::vector<int>> n_5 = {
        {_,b,b,b,b,b,b,b,_},
        {_,b,b,b,b,b,b,b,_},
        {_,b,b,_,_,_,_,_,_},
        {_,b,b,_,_,_,_,_,_},
        {_,b,b,b,b,b,b,_,_},
        {_,b,b,b,b,b,b,b,_},
        {_,_,_,_,_,_,b,b,_},
        {_,b,b,_,_,_,b,b,_},
        {_,b,b,b,b,b,b,b,_},
        {_,_,b,b,b,b,b,_,_},

    };

    const std::vector<std::vector<int>> n_6 = {
        {_,_,_,_,_,b,b,_,_},
        {_,_,_,_,b,b,_,_,_},
        {_,_,_,b,b,_,_,_,_},
        {_,_,b,b,_,_,_,_,_},
        {_,b,b,_,_,_,_,_,_},
        {_,b,b,b,b,b,b,_,_},
        {_,b,b,b,b,b,b,b,_},
        {_,b,b,b,_,_,b,b,_},
        {_,b,b,b,_,_,b,b,_},
        {_,_,b,b,b,b,b,_,_},

    };

    const std::vector<std::vector<int>> n_7 = {
        {_,b,b,b,b,b,b,b,_},
        {_,b,b,b,b,b,b,b,_},
        {_,_,_,_,_,b,b,_,_},
        {_,_,_,_,_,b,b,_,_},
        {_,_,_,_,b,b,_,_,_},
        {_,_,_,_,b,b,_,_,_},
        {_,_,_,b,b,_,_,_,_},
        {_,_,_,b,b,_,_,_,_},
        {_,_,b,b,_,_,_,_,_},
        {_,_,b,b,_,_,_,_,_},

    };

    const std::vector<std::vector<int>> n_8 = {
        {_,_,b,b,b,b,b,_,_},
        {_,b,b,b,b,b,b,b,_},
        {_,b,b,_,_,_,b,b,_},
        {_,b,b,_,_,_,b,b,_},
        {_,_,b,b,b,b,b,_,_},
        {_,_,b,b,b,b,b,_,_},
        {_,b,b,_,_,_,b,b,_},
        {_,b,b,_,_,_,b,b,_},
        {_,b,b,b,b,b,b,b,_},
        {_,_,b,b,b,b,b,_,_},

    };

    const std::vector<std::vector<int>> n_9 = {
        {_,_,_,b,b,b,b,_,_},
        {_,_,b,b,b,b,b,b,_},
        {_,_,b,b,_,_,b,b,_},
        {_,_,b,b,b,b,b,b,_},
        {_,_,_,b,b,b,b,_,_},
        {_,_,_,_,_,b,b,_,_},
        {_,_,_,_,b,b,_,_,_},
        {_,_,_,_,b,b,_,_,_},
        {_,_,_,b,b,_,_,_,_},
        {_,_,_,b,b,_,_,_,_},

    };

    const std::vector<std::vector<int>> s_dp = {
        {_,_,_,_,_,_,_,_,_},
        {_,_,_,b,b,b,_,_,_},
        {_,_,_,b,b,b,_,_,_},
        {_,_,_,b,b,b,_,_,_},
        {_,_,_,_,_,_,_,_,_},
        {_,_,_,_,_,_,_,_,_},
        {_,_,_,b,b,b,_,_,_},
        {_,_,_,b,b,b,_,_,_},
        {_,_,_,b,b,b,_,_,_},
        {_,_,_,_,_,_,_,_,_},

    };
    
    std::list<Platform> platforms_;
    std::list<Document> ds_;
    std::list<Hummer> hs_;
    std::list<Bomb> bs_;
    Finder<Document> documents_;
    Finder<Hummer> hummers_;
    Finder<Bomb> bombs_;
    
    bool finished_;
    bool g_o;
    bool paused_;
    bool explode_;

    int k_;

    void process_keys(pro2::Window& window);
    void update_objects(pro2::Window& window);
    void update_camera(pro2::Window& window);

 public:
    Game(int width, int height);

    void update(pro2::Window& window);
    void paint(pro2::Window& window);

    bool is_finished() const {
        return finished_;
    }

 private:
    static constexpr int sky_blue = 0x5c94fc;

    static std::vector<std::vector<int>> escala(const std::vector<std::vector<int>>& sprite, int escala) {
        if (sprite.size() == 0) return sprite;
        std::vector<std::vector<int>> result = {};
        for (auto row : sprite) {
            std::vector<int> n_row = {};
            for (auto p : row) {
                for (int i = 0; i < escala; i++) {
                    n_row.push_back(p);
                }
            }
            for (int i = 0; i < escala; i++) {
                result.push_back(n_row);
            }
        }
        return result;
    }
    
};

#endif
